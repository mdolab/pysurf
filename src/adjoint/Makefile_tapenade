INPUT_FILES = \
	../common/precision.F90 \
	../common/constants.F90 \
	../intersections/intersection.F90 \
	../utilities/utilities.F90 \
	../curveSearch/curveUtils.F90 \
	../ADT/adtProjections.F90 \

INPUT_FILES_NODIR = $(notdir $(INPUT_FILES))

ROUTINES = "\
	triTriIntersect \
	remesh_main(coor)\(newCoor) \
	barProjection(x1,x2,x)\(xf) \
	computeTangent \
	triaProjection(x1,x2,x3,x)\(xf,u,v) \
	quadProjResidual(x1,x2,x3,x4,x,u,v)\(residual) \
	quadProjOutput(x1,x2,x3,x4,u,v)\(xf) \
	triaWeights \
	quadWeights \
	computeNodalNormals \
	"

default:
# Preprocess input files
	@for file in $(INPUT_FILES); do \
		cpp -traditional -P -DUSE_TAPENADE $$file $$(basename $$file); \
	done

# Generate forward mode
	tapenade -d -tgtmodulename "_d" -head $(ROUTINES) $(INPUT_FILES_NODIR)

# Generate backward mode
	tapenade -b -adjmodulename "_b" -head $(ROUTINES) $(INPUT_FILES_NODIR)

# Remove modules that are not useful, but were differentiated anyway
	rm precision_*

# Edit AD code to use original modules that should not be differentiated
	sed -i -e 's/PRECISION_D/PRECISION/' -e 's/CONSTANTS_D/CONSTANTS/' *_d.f90
	sed -i -e 's/PRECISION_B/PRECISION/' -e 's/CONSTANTS_B/CONSTANTS/' *_b.f90

# Edit AD code to fix type declarations
	sed -i -e 's/INTEGER\*4/INTEGER/' *_b.f90

# Remove sed backup files
	rm -f *~

# Remove preprocessed files
	rm $(INPUT_FILES_NODIR)

clean:
	rm *_d.* *_b.*
