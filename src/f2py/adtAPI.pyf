!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module adtAPI ! in
    interface  ! in :adtAPI
        module adtapi ! in :adtAPI:adtAPI.F90
            use adtsearch
            use adtbuild
            use adtutils
            subroutine adtbuildsurfaceadt(ntria,nquads,nnodes,coor,triaconn,quadsconn,bbox,usebbox,comm,adtid) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ntria
                integer(kind=inttype) intent(in) :: nquads
                integer(kind=inttype) intent(in) :: nnodes
                real(kind=realtype) dimension(3,nnodes),intent(in) :: coor
                integer(kind=inttype) dimension(3,ntria),intent(in) :: triaconn
                integer(kind=inttype) dimension(4,nquads),intent(in) :: quadsconn
                real(kind=realtype) dimension(3,2),intent(in) :: bbox
                logical intent(in) :: usebbox
                integer intent(in) :: comm
                character(32) intent(in) :: adtid
            end subroutine adtbuildsurfaceadt
            subroutine adtmindistancesearch(ncoor,nnodes,coor,adtid,procid,elementtype,elementid,uvw,dist2,allxfs,ninterpol,arrdonor,arrinterpol) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: nnodes
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                character(32) intent(in) :: adtid
                integer dimension(ncoor),intent(out) :: procid
                integer(kind=adtelementtype) dimension(ncoor),intent(out) :: elementtype
                integer(kind=inttype) dimension(ncoor),intent(out) :: elementid
                real(kind=realtype) dimension(3,ncoor),intent(out) :: uvw
                real(kind=realtype) dimension(ncoor),intent(inout) :: dist2
                real(kind=realtype) dimension(3,ncoor),intent(inout) :: allxfs
                real(kind=realtype) dimension(ninterpol,ncoor),intent(inout) :: arrinterpol
                integer(kind=inttype) intent(in) :: ninterpol
                real(kind=realtype) dimension(ninterpol,nnodes),intent(in) :: arrdonor
            end subroutine adtmindistancesearch
            subroutine adtmindistancesearch_d(ncoor,nnodes,coor,coord,adtid,adtcoord,procid,elementtype,elementid,uvw,dist2,allxfs,allxfsd,ninterpol,arrdonor,arrdonord,arrinterpol,arrinterpold) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: nnodes
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coord
                character(32) intent(in) :: adtid
                real(kind=realtype) dimension(3,nnodes),intent(in) :: adtcoord
                integer dimension(ncoor),intent(in) :: procid
                integer(kind=adtelementtype) dimension(ncoor),intent(in) :: elementtype
                integer(kind=inttype) dimension(ncoor),intent(in) :: elementid
                real(kind=realtype) dimension(3,ncoor),intent(in) :: uvw
                real(kind=realtype) dimension(ncoor),intent(in) :: dist2
                real(kind=realtype) dimension(3,ncoor),intent(in) :: allxfs
                real(kind=realtype) dimension(3,ncoor),intent(out) :: allxfsd
                real(kind=realtype) dimension(ninterpol,ncoor),intent(in) :: arrinterpol
                real(kind=realtype) dimension(ninterpol,ncoor),intent(out) :: arrinterpold
                integer(kind=inttype) intent(in) :: ninterpol
                real(kind=realtype) dimension(ninterpol,nnodes),intent(in) :: arrdonor
                real(kind=realtype) dimension(ninterpol,nnodes),intent(in) :: arrdonord
            end subroutine adtmindistancesearch_d
            subroutine adtmindistancesearch_b(ncoor,nnodes,coor,coorb,adtid,adtcoorb,procid,elementtype,elementid,uvw,dist2,allxfs,allxfsb,ninterpol,arrdonor,arrdonorb,arrinterpol,arrinterpolb) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: nnodes
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                real(kind=realtype) dimension(3,ncoor),intent(out) :: coorb
                character(32) intent(in) :: adtid
                real(kind=realtype) dimension(3,nnodes),intent(out) :: adtcoorb
                integer dimension(ncoor),intent(in) :: procid
                integer(kind=adtelementtype) dimension(ncoor),intent(in) :: elementtype
                integer(kind=inttype) dimension(ncoor),intent(in) :: elementid
                real(kind=realtype) dimension(3,ncoor),intent(in) :: uvw
                real(kind=realtype) dimension(ncoor),intent(in) :: dist2
                real(kind=realtype) dimension(3,ncoor),intent(in) :: allxfs
                real(kind=realtype) dimension(3,ncoor),intent(in) :: allxfsb
                real(kind=realtype) dimension(ninterpol,ncoor),intent(in) :: arrinterpol
                real(kind=realtype) dimension(ninterpol,ncoor),intent(in) :: arrinterpolb
                integer(kind=inttype) intent(in) :: ninterpol
                real(kind=realtype) dimension(ninterpol,nnodes),intent(in) :: arrdonor
                real(kind=realtype) dimension(ninterpol,nnodes),intent(out) :: arrdonorb
            end subroutine adtmindistancesearch_b
            subroutine adtgetnumberoftrees(nADT) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(out) :: nADT
            end subroutine adtgetnumberoftrees
            subroutine adtdeallocateadts(adtid) ! in :adtAPI:adtAPI.F90:adtapi
                character(32) intent(in) :: adtid
            end subroutine adtdeallocateadts
            subroutine adtcomputenodalnormals(ncoor,ntria,nquads,coor,triaconn,quadsconn,nodalnormals) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: ntria
                integer(kind=inttype) intent(in) :: nquads
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                integer(kind=inttype) dimension(3,ntria),intent(in) :: triaconn
                integer(kind=inttype) dimension(4,nquads),intent(in) :: quadsconn
                real(kind=realtype) dimension(3,ncoor),intent(out) :: nodalnormals
            end subroutine adtcomputenodalnormals
            subroutine adtcomputenodalnormals_d(ncoor,ntria,nquads,coor,coord,triaconn,quadsconn,nodalnormals,nodalnormalsd) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: ntria
                integer(kind=inttype) intent(in) :: nquads
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coord
                integer(kind=inttype) dimension(3,ntria),intent(in) :: triaconn
                integer(kind=inttype) dimension(4,nquads),intent(in) :: quadsconn
                real(kind=realtype) dimension(3,ncoor),intent(out) :: nodalnormals
                real(kind=realtype) dimension(3,ncoor),intent(out) :: nodalnormalsd
            end subroutine adtcomputenodalnormals_d
            subroutine adtcomputenodalnormals_b(ncoor,ntria,nquads,coor,coorb,triaconn,quadsconn,nodalnormals,nodalnormalsb) ! in :adtAPI:adtAPI.F90:adtapi
                integer(kind=inttype) intent(in) :: ncoor
                integer(kind=inttype) intent(in) :: ntria
                integer(kind=inttype) intent(in) :: nquads
                real(kind=realtype) dimension(3,ncoor),intent(in) :: coor
                real(kind=realtype) dimension(3,ncoor),intent(out) :: coorb
                integer(kind=inttype) dimension(3,ntria),intent(in) :: triaconn
                integer(kind=inttype) dimension(4,nquads),intent(in) :: quadsconn
                real(kind=realtype) dimension(3,ncoor),intent(in) :: nodalnormals
                real(kind=realtype) dimension(3,ncoor),intent(in) :: nodalnormalsb
            end subroutine adtcomputenodalnormals_b
        end module adtapi
    end interface
end python module adtAPI

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
