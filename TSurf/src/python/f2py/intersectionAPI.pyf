!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module intersectionAPI ! in 
    interface  ! in :intersectionAPI
        module intersectionapi ! in :intersectionAPI:intersectionAPI.F90
            use precision
            subroutine computeintersection(nnodesa,ntriaa,nquadsa,nnodesb,ntriab,nquadsb,coora,triaconna,quadsconna,coorb,triaconnb,quadsconnb) ! in :intersectionAPI:intersectionAPI.F90:intersectionapi
                use intersection
                integer(kind=inttype), optional,intent(in),check(shape(coora,1)==nnodesa),depend(coora) :: nnodesa=shape(coora,1)
                integer(kind=inttype), optional,intent(in),check(shape(triaconna,1)==ntriaa),depend(triaconna) :: ntriaa=shape(triaconna,1)
                integer(kind=inttype), optional,intent(in),check(shape(quadsconna,1)==nquadsa),depend(quadsconna) :: nquadsa=shape(quadsconna,1)
                integer(kind=inttype), optional,intent(in),check(shape(coorb,1)==nnodesb),depend(coorb) :: nnodesb=shape(coorb,1)
                integer(kind=inttype), optional,intent(in),check(shape(triaconnb,1)==ntriab),depend(triaconnb) :: ntriab=shape(triaconnb,1)
                integer(kind=inttype), optional,intent(in),check(shape(quadsconnb,1)==nquadsb),depend(quadsconnb) :: nquadsb=shape(quadsconnb,1)
                real(kind=realtype) dimension(3,nnodesa),intent(in) :: coora
                integer(kind=inttype) dimension(3,ntriaa),intent(in) :: triaconna
                integer(kind=inttype) dimension(4,nquadsa),intent(in) :: quadsconna
                real(kind=realtype) dimension(3,nnodesb),intent(in) :: coorb
                integer(kind=inttype) dimension(3,ntriab),intent(in) :: triaconnb
                integer(kind=inttype) dimension(4,nquadsb),intent(in) :: quadsconnb
            end subroutine computeintersection
        end module intersectionapi
    end interface 
end python module intersectionAPI

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
